-- MySQL Script generated by MySQL Workbench
-- Mon Nov 27 12:15:49 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ImeldaStudioDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ImeldaStudioDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ImeldaStudioDB` DEFAULT CHARACTER SET utf8 ;
USE `ImeldaStudioDB` ;

-- -----------------------------------------------------
-- Table `ImeldaStudioDB`.`StudioClassPayment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ImeldaStudioDB`.`StudioClassPayment` (
  `idStudioClassPayment` INT NOT NULL,
  `StudioClassPaymentCost` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idStudioClassPayment`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ImeldaStudioDB`.`StudioClassEquipmentID`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ImeldaStudioDB`.`StudioClassEquipmentID` (
  `idStudioClassEquipmentID` INT NOT NULL,
  `StudioClassEquipmentType` TEXT NOT NULL,
  PRIMARY KEY (`idStudioClassEquipmentID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ImeldaStudioDB`.`studioInstructor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ImeldaStudioDB`.`studioInstructor` (
  `idstudioInstructor` INT NOT NULL,
  `studioInstructorName` VARCHAR(45) NOT NULL,
  `studioInstructorSurName` VARCHAR(45) NOT NULL,
  `studioInstructorAddress` VARCHAR(45) NOT NULL,
  `studioInstructorPhone` INT NOT NULL,
  `studioInstructorEmail` VARCHAR(50) NULL,
  `studioClassID` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idstudioInstructor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ImeldaStudioDB`.`StudioClass`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ImeldaStudioDB`.`StudioClass` (
  `idStudioClass` INT GENERATED ALWAYS AS () VIRTUAL,
  `StudioClassCalendar` DATE NOT NULL,
  `StudioClassCost` VARCHAR(45) NULL,
  `StudioClassEquipmentID` VARCHAR(45) NOT NULL,
  `StudioClassEquipmentID_idStudioClassEquipmentID` INT NOT NULL,
  `studioInstructor_idstudioInstructor` INT NOT NULL,
  PRIMARY KEY (`idStudioClass`, `StudioClassEquipmentID_idStudioClassEquipmentID`, `studioInstructor_idstudioInstructor`),
  UNIQUE INDEX `StudioClassCost_UNIQUE` (`StudioClassCost` ASC),
  INDEX `fk_StudioClass_StudioClassEquipmentID1_idx` (`StudioClassEquipmentID_idStudioClassEquipmentID` ASC),
  INDEX `fk_StudioClass_studioInstructor1_idx` (`studioInstructor_idstudioInstructor` ASC),
  CONSTRAINT `fk_StudioClass_StudioClassEquipmentID1`
    FOREIGN KEY (`StudioClassEquipmentID_idStudioClassEquipmentID`)
    REFERENCES `ImeldaStudioDB`.`StudioClassEquipmentID` (`idStudioClassEquipmentID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_StudioClass_studioInstructor1`
    FOREIGN KEY (`studioInstructor_idstudioInstructor`)
    REFERENCES `ImeldaStudioDB`.`studioInstructor` (`idstudioInstructor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ImeldaStudioDB`.`studioBookingClass`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ImeldaStudioDB`.`studioBookingClass` (
  `idstudioBookingClass` INT NOT NULL,
  `studioBookingClassStartDate` DATE NOT NULL,
  `studioBookingClassEndDate` DATE NOT NULL,
  `studioClassID` VARCHAR(45) NOT NULL,
  `studioCustomerID` VARCHAR(45) NOT NULL,
  `StudioClassPayment_idStudioClassPayment` INT NOT NULL,
  `StudioClass_idStudioClass` INT NOT NULL,
  PRIMARY KEY (`idstudioBookingClass`, `StudioClassPayment_idStudioClassPayment`, `StudioClass_idStudioClass`),
  INDEX `fk_studioBookingClass_StudioClassPayment1_idx` (`StudioClassPayment_idStudioClassPayment` ASC),
  INDEX `fk_studioBookingClass_StudioClass1_idx` (`StudioClass_idStudioClass` ASC),
  CONSTRAINT `fk_studioBookingClass_StudioClassPayment1`
    FOREIGN KEY (`StudioClassPayment_idStudioClassPayment`)
    REFERENCES `ImeldaStudioDB`.`StudioClassPayment` (`idStudioClassPayment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_studioBookingClass_StudioClass1`
    FOREIGN KEY (`StudioClass_idStudioClass`)
    REFERENCES `ImeldaStudioDB`.`StudioClass` (`idStudioClass`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ImeldaStudioDB`.`studioCustomer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ImeldaStudioDB`.`studioCustomer` (
  `idstudioCustomer` INT NOT NULL,
  `studioCustomerFirstName` VARCHAR(45) NOT NULL,
  `studioCustomerSurname` VARCHAR(45) NOT NULL,
  `studioCustomerAddress` VARCHAR(45) NOT NULL,
  `studioCustomerPhone` VARCHAR(10) NOT NULL,
  `studioCustomerEmail` VARCHAR(50) NULL,
  `studioCustomerOccupation` TEXT NULL,
  `StudioClassPayment_idStudioClassPayment` INT NOT NULL,
  `studioBookingClass_idstudioBookingClass` INT NOT NULL,
  `studioBookingClass_StudioClassPayment_idStudioClassPayment` INT NOT NULL,
  PRIMARY KEY (`idstudioCustomer`, `StudioClassPayment_idStudioClassPayment`, `studioBookingClass_idstudioBookingClass`, `studioBookingClass_StudioClassPayment_idStudioClassPayment`),
  INDEX `fk_studioCustomer_StudioClassPayment1_idx` (`StudioClassPayment_idStudioClassPayment` ASC),
  INDEX `fk_studioCustomer_studioBookingClass1_idx` (`studioBookingClass_idstudioBookingClass` ASC, `studioBookingClass_StudioClassPayment_idStudioClassPayment` ASC),
  CONSTRAINT `fk_studioCustomer_StudioClassPayment1`
    FOREIGN KEY (`StudioClassPayment_idStudioClassPayment`)
    REFERENCES `ImeldaStudioDB`.`StudioClassPayment` (`idStudioClassPayment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_studioCustomer_studioBookingClass1`
    FOREIGN KEY (`studioBookingClass_idstudioBookingClass` , `studioBookingClass_StudioClassPayment_idStudioClassPayment`)
    REFERENCES `ImeldaStudioDB`.`studioBookingClass` (`idstudioBookingClass` , `StudioClassPayment_idStudioClassPayment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `ImeldaStudioDB` ;

-- -----------------------------------------------------
-- Placeholder table for view `ImeldaStudioDB`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ImeldaStudioDB`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `ImeldaStudioDB`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ImeldaStudioDB`.`view1`;
USE `ImeldaStudioDB`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
